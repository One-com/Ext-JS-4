/**
 * Search box
 */
Ext.onReady(function() {

    var searchStore = new Ext.data.JsonStore({
        root: 'classes',
        fields: [
            'memberType',
            'cls',
            'member'
        ]
    });

    var panel = new Ext.DataView({
        store: searchStore,
        tpl: new Ext.XTemplate(
            '<tpl for=".">',
                '<div class="item {memberType}">',
                    '<div class="title">{member}</div>',
                    '<div class="class">{cls}</div>',
                '</div>',
            '</tpl>'
        ),
        id: 'quick-search',
        overClass:'x-view-over',
        itemSelector:'div.item',
        singleSelect: true,
        handleClick: function() {
            var curItem = panel.getSelectedIndexes()[0];
            var classId = panel.store.data.items[curItem].data.cls;

            if (req.standAloneMode) {
        		if (window.location.href.match(/api/)) {
        			window.location = classId + '.html';
        		} else {
        			window.location = 'api/' + classId + '.html';
        		}
        		return;
        	}

            var cls = classId;
            if (panel.store.data.items[curItem].data.memberType != 'cls') {
                cls += '#' + panel.store.data.items[curItem].data.memberType + '-' + panel.store.data.items[curItem].data.member;
            }
            panel.hide();
            showClassDoc(cls);
        },
        listeners: {
            click: function() {
                this.handleClick()
            }
        }
    });

    searchStore.on('load', function() {
        panel.render('search-box');
    });

    Ext.get('search-field').on('blur', function(ev, el) {
        setTimeout(function(){
            panel.hide();
        }, 100);
    });
    Ext.get('search-field').on('focus', function(ev, el) {
        panel.show();
    });

    /**
     * When a key is pressed in the search field, search for classes, methods, properties, configs, etc
     */
    Ext.get('search-field').on('keyup', function(ev, el) {

        // Esc key
        if (ev.keyCode == 27 || el.value == '') {
            panel.hide();
            return;
        }
        else {
            panel.show();
        }

        var curItem = panel.getSelectedIndexes()[0],
            lastItem = panel.store.data.length - 1;

        // Up arrow
        if (ev.keyCode == 38) {
            if (curItem == undefined) {
                panel.select(0);
            } else {
                panel.select(curItem == 0 ? lastItem : (curItem - 1));
            }
        }
        // Down arrow
        else if (ev.keyCode == 40) {
            if (curItem == undefined) {
                panel.select(0);
            } else {
                panel.select(curItem == lastItem ? 0 : curItem + 1);
            }
        }
        // Enter key
        else if (ev.keyCode == 13) {
            ev.preventDefault();
            if(curItem != undefined) {
                panel.handleClick();
            }
        }
        else {
            searchExt(Ext.get(el).getValue());
        }
    });

    Ext.get(Ext.get('search-field').dom.parentNode).on('submit', function(ev, el) {
        ev.preventDefault();
    });
    
    var classSearch = 
    {"Ext":{"method":["addBehaviors","apply","applyIf","bind","callback","clean","clone","copyTo","create","createByAlias","decode","defer","define","destroy","destroyMembers","dispatch","each","emptyFn","encode","escapeRe","exclude","extend","flatten","fly","get","getBody","getClassName","getCmp","getDoc","getDom","getHead","getOrientation","getScrollBarWidth","getStore","htmlDecode","htmlEncode","id","invoke","isArray","isBoolean","isDate","isDefined","isElement","isEmpty","isFunction","isIterable","isNumber","isNumeric","isObject","isPrimitive","isString","iterate","max","mean","merge","min","namespace","ns","onDocumentReady","onReady","override","partition","pass","pluck","preg","query","redirect","regApplication","regController","regModel","regStore","removeNode","require","requirePackages","select","sum","toArray","toSentence","type","unique","urlAppend","urlDecode","urlEncode","value","widget","zip"],"property":["BLANK_IMAGE_URL","SSL_SECURE_URL","USE_NATIVE_JSON","enableFx","enableGarbageCollector","enableListenerCollection","enableNestedListenerRemoval","enumerables","isChrome","isGecko","isGecko3","isGecko4","isIE","isIE6","isIE7","isIE8","isIE9","isLinux","isMac","isOpera","isReady","isSafari","isSafari2","isSafari3","isSafari4","isWebKit","isWindows","scopeResetCSS","useShims"],"event":[],"config":[]},"Ext.AbstractComponent":{"method":["addCls","afterComponentLayout","destroy","disable","doAutoRender","doComponentLayout","enable","findLayoutController","getBubbleTarget","getEl","getHeight","getId","getInsertPosition","getLoader","getPlugin","getSize","getWidth","getXTypes","isDisabled","isDraggable","isDroppable","isFloating","isHidden","isVisible","isXType","nextNode","nextSibling","previousNode","previousSibling","removeCls","setDisabled","setDocked","setHeight","setLoading","setPosition","setSize","setVisible","setWidth","up","update"],"property":["draggable","frameSize","ownerCt","rendered"],"event":["activate","added","afterrender","beforeactivate","beforedeactivate","beforedestroy","beforehide","beforerender","beforeshow","deactivate","destroy","disable","enable","hide","move","removed","render","resize","show"],"config":["autoEl","autoRender","baseCls","border","cls","componentCls","componentLayout","contentEl","data","disabled","disabledCls","draggable","floating","frame","height","hidden","hideMode","html","id","itemId","loader","margin","maxHeight","maxWidth","minHeight","minWidth","overCls","padding","plugins","renderSelectors","renderTo","renderTpl","style","styleHtmlCls","styleHtmlContent","tpl","tplWriteMode","ui","width"]},"Ext.AbstractContainer":{"method":["add","cascade","child","doLayout","down","getComponent","getLayout","insert","move","query","remove","removeAll"],"property":["items"],"event":["add","afterlayout","beforeadd","beforecardswitch","beforeremove","cardswitch","remove"],"config":["activeItem","autoDestroy","bubbleEvents","defaultType","defaults","items","layout","suspendLayout"]},"Ext.AbstractDataView":{"method":["bindStore","collectData","deselect","findItemByChild","findTargetByEvent","getNode","getNodes","getRecord","getRecords","getSelectedNodes","getSelectedRecords","getSelectionCount","getStore","indexOf","isSelected","prepareData","refresh","refreshNode","select"],"property":[],"event":["beforerefresh","refresh"],"config":["blockRefresh","deferEmptyText","disableSelection","emptyText","itemSelector","loadingHeight","loadingText","multiSelect","overItemCls","selectedItemCls","simpleSelect","singleSelect","store","tpl","trackOver"]},"Ext.AbstractPanel":{"method":["addDocked","getComponent","getDockedComponent","getDockedItems","insertDocked","removeDocked"],"property":[],"event":["bodyresize"],"config":["baseCls","bodyBorder","bodyCls","bodyMargin","bodyPadding","bodyStyle","dockedItems"]},"Ext.AbstractPlugin":{"method":["disable","enable"],"property":["init"],"event":[],"config":[]},"Ext.Action":{"method":["disable","each","enable","execute","getIconClass","getText","hide","isDisabled","isHidden","setDisabled","setHandler","setHidden","setIconClass","setText","show"],"property":[],"event":[],"config":["disabled","handler","hidden","iconCls","itemId","scope","text"]},"Ext.Ajax":{"method":[],"property":["autoAbort","defaultHeaders","disableCaching","extraParams","method","timeout","url"],"event":[],"config":[]},"Ext.Application":{"method":["determineProfile","dispatch","getProfile","launch"],"property":[],"event":["beforeprofilechange","launch","profilechange"],"config":["autoInitViewport","autoUpdateComponentProfiles","defaultUrl","loadMaskFadeDuration","loadMaskRemoveDuration","name","profiles","scope","setProfilesOnLaunch","useHistory","useLoadMask"]},"Ext.Array":{"method":["clean","clone","contains","difference","each","every","filter","forEach","from","include","indexOf","intersect","map","merge","pluck","remove","some","toArray","union","unique"],"property":[],"event":[],"config":[]},"Ext.Base":{"method":["Ext.Base.addStatics","Ext.Base.createAlias","Ext.Base.extend","Ext.Base.override","callOverridden","callParent","constructor","getName","implement","initConfig","statics"],"property":["self"],"event":[],"config":[]},"Ext.button.Button":{"method":["getPressed","getTemplateArgs","getText","hasVisibleMenu","hideMenu","setHandler","setIcon","setIconClass","setParams","setText","setTooltip","showMenu","toggle"],"property":["disabled","hidden","menu","pressed"],"event":["click","menuhide","menushow","menutriggerout","menutriggerover","mouseout","mouseover","toggle"],"config":["allowDepress","arrowAlign","arrowCls","autoWidth","baseCls","clickEvent","cls","disabled","enableToggle","focusCls","handleMouseEvents","handler","hidden","icon","iconAlign","iconCls","menu","menuAlign","minWidth","overCls","overflowText","pressed","pressedCls","preventDefault","repeat","scale","scope","tabIndex","template","text","toggleGroup","toggleHandler","tooltip","tooltipType","type","ui"]},"Ext.button.Cycle":{"method":["getActiveItem","setActiveItem","toggleSelected"],"property":["menu"],"event":["change"],"config":["changeHandler","forceIcon","items","prependText","showText"]},"Ext.button.Split":{"method":["setArrowHandler"],"property":[],"event":["arrowclick"],"config":["arrowHandler","arrowTooltip"]},"Ext.chart.axis.Axis":{"method":["drawAxis","drawGrid","drawLabels"],"property":[],"event":[],"config":["dashSize","length","position","width"]},"Ext.chart.axis.Category":{"method":[],"property":["calculateCategoryCount","categoryNames"],"event":[],"config":[]},"Ext.chart.axis.Numeric":{"method":[],"property":["adjustMaximumByMajorUnit","adjustMinimumByMajorUnit","alwaysShowZero","calculateByLabelSize","majorUnit","maximum","minimum","minorUnit","position","roundMajorUnit","scale","snapToUnits"],"event":[],"config":[]},"Ext.chart.axis.Time":{"method":[],"property":["aggregateOp","calculateByLabelSize","constrain","dateFormat","fromDate","step","timeUnit","toDate"],"event":[],"config":[]},"Ext.chart.Chart":{"method":["bindStore"],"property":[],"event":["beforerefresh","refresh"],"config":["animate","background","implOrder","insetPadding","legend","resize"]},"Ext.chart.LegendItem":{"method":["createSprites","updatePosition"],"property":[],"event":[],"config":[]},"Ext.chart.series.Area":{"method":["drawSeries","getLegendColor","highlightItem","highlightSeries","unHighlightItem","unHighlightSeries"],"property":[],"event":[],"config":["style"]},"Ext.chart.series.Bar":{"method":["drawSeries","getLegendColor"],"property":[],"event":[],"config":["column","groupGutter","gutter","style","xpadding","ypadding"]},"Ext.chart.series.Column":{"method":[],"property":[],"event":[],"config":["xpadding","ypadding"]},"Ext.chart.series.Line":{"method":["drawSeries"],"property":[],"event":[],"config":["dash","fill","markerCfg","selectionTolerance","showMarkers","smooth","style"]},"Ext.chart.series.Pie":{"method":["drawSeries","getLegendColor","highlightItem","unHighlightItem"],"property":[],"event":[],"config":["angleField","colorSet","donut","highlightDuration","lengthField","showInLegend","style"]},"Ext.chart.series.Radar":{"method":["drawSeries"],"property":[],"event":[],"config":["style"]},"Ext.chart.series.Scatter":{"method":["drawSeries"],"property":[],"event":[],"config":["markerCfg","style"]},"Ext.chart.series.Series":{"method":["getItemForPoint","getLegendColor","hideAll","showAll"],"property":[],"event":[],"config":["listeners","renderer","shadowAttributes","showInLegend","title","type"]},"Ext.Class":{"method":["Class","getDefaultPreprocessors","getPreprocessor","insertDefaultPreprocessor","registerPreprocessor","setDefaultPreprocessors"],"property":[],"event":[],"config":[]},"Ext.ClassManager":{"method":["assignNamespace","create","exist","factory","get","getAliasesByName","getByAlias","getClass","getDefaultPostprocessors","getDisplayName","getName","getNameByAlias","getNameByAlternate","getNamesByExpression","getPostprocessor","insertDefaultPostprocessor","instantiate","instantiateByAlias","registerPostprocessor","set","setAlias","setDefaultPostprocessors"],"property":[],"event":[],"config":[]},"Ext.Component":{"method":["bubble","cloneConfig","findParentBy","findParentByType","focus","getBox","getPosition","getXType","hide","setAutoScroll","setPagePosition","setPosition","show","updateBox"],"property":["{Ext.Container}","{Ext.ZIndexManager}"],"event":[],"config":["autoScroll","draggable","floating","maintainFlex","resizable","resizeHandles"]},"Ext.ComponentLoader":{"method":["setOptions","setTarget"],"property":[],"event":[],"config":["loadMask","renderer","scripts","target"]},"Ext.ComponentMgr":{"method":["create"],"property":[],"event":[],"config":[]},"Ext.ComponentQuery":{"method":["query"],"property":[],"event":[],"config":[]},"Ext.CompositeElement":{"method":[null],"property":[],"event":[],"config":[]},"Ext.CompositeElementLite":{"method":["add","clear","contains","each","fill","filter","first","getCount","indexOf","item","last","removeElement","replaceElement"],"property":["elements"],"event":[],"config":[]},"Ext.container.ButtonGroup":{"method":[],"property":[],"event":[],"config":["baseCls","columns","frame","layout"]},"Ext.container.Container":{"method":["getChildByElement"],"property":[],"event":[],"config":[]},"Ext.container.Viewport":{"method":[],"property":[],"event":[],"config":[]},"Ext.Controller":{"method":["build","control","create","destroy","edit","getBuildListeners","getEditListeners","getModel","onCancelBuild","onCancelEdit","onCreateInstance","onDestroyInstance","onUpdateInstance","render","setRenderTarget","update"],"property":["renderTarget"],"event":["instance-created","instance-creation-failed","instance-destroyed","instance-destruction-failed","instance-update-failed","instance-updated"],"config":[]},"Ext.core.DomHelper":{"method":["append","applyStyles","createDom","createTemplate","insertAfter","insertBefore","insertFirst","insertHtml","markup","overwrite"],"property":["useDom"],"event":[],"config":[]},"Ext.core.Element":{"method":["Ext.core.Element.fromPoint","Ext.core.Element.get","Ext.core.Element.getDocumentHeight","Ext.core.Element.getDocumentWidth","Ext.core.Element.getOrientation","Ext.core.Element.getViewSize","Ext.core.Element.getViewportHeight","Ext.core.Element.getViewportWidth","Ext.core.Element.normalize","Ext.core.Element.parseBox","Ext.core.Element.parseStyles","Ext.core.Element.unitizeBox","addCls","addClsOnClick","addClsOnFocus","addClsOnOver","addKeyListener","addKeyMap","addListener","alignTo","anchorTo","appendChild","appendTo","applyStyles","blur","boxWrap","center","child","clean","clearListeners","clearOpacity","clearPositioning","clip","contains","createChild","createProxy","createShim","destroy","down","enableDisplayMode","findParent","findParentNode","first","fly","focus","frame","getAlignToXY","getAnchorXY","getAttribute","getAttributeNS","getBorderWidth","getBottom","getBox","getCenterXY","getColor","getComputedHeight","getComputedWidth","getConstrainVector","getFrameWidth","getHeight","getLeft","getLoader","getMargin","getOffsetsTo","getPadding","getPageBox","getPositioning","getRegion","getRight","getScroll","getSize","getStyle","getStyleSize","getStyles","getTextWidth","getTop","getValue","getViewRegion","getViewSize","getWidth","getX","getXY","getY","ghost","hasCls","hide","highlight","hover","initDD","initDDProxy","initDDTarget","insertAfter","insertBefore","insertFirst","insertHtml","insertSibling","is","isBorderBox","isDisplayed","isMasked","isScrollable","isVisible","last","load","mask","monitorMouseLeave","move","moveTo","next","on","parent","position","prev","puff","purgeAllListeners","query","radioCls","relayEvent","remove","removeAllListeners","removeAnchor","removeCls","removeListener","repaint","replace","replaceCls","replaceWith","scroll","scrollIntoView","scrollTo","select","serializeForm","set","setBottom","setBounds","setBox","setDisplayed","setHeight","setLeft","setLeftTop","setLocation","setOpacity","setPositioning","setRegion","setRight","setSize","setStyle","setTop","setVisibilityMode","setVisible","setWidth","setX","setXY","setY","show","slideIn","slideOut","swallowEvent","switchOff","toggle","toggleCls","translatePoints","un","unclip","unmask","unselectable","up","update","wrap"],"property":["Ext.core.Element.DISPLAY","Ext.core.Element.OFFSETS","Ext.core.Element.VISIBILITY","Ext.core.Element.visibilityCls","autoBoxAdjust","defaultUnit","dom","id","lastIndex","originalDisplay","private"],"event":["DOMActivate","DOMAttrModified","DOMCharacterDataModified","DOMFocusIn","DOMFocusOut","DOMNodeInserted","DOMNodeInsertedIntoDocument","DOMNodeRemoved","DOMNodeRemovedFromDocument","DOMSubtreeModified","abort","blur","change","click","contextmenu","dblclick","error","focus","keydown","keypress","keyup","load","mousedown","mouseenter","mouseleave","mousemove","mouseout","mouseover","mouseup","reset","resize","scroll","select","submit","unload"],"config":[]},"Ext.data.AbstractStore":{"method":["getNewRecords","getProxy","getUpdatedRecords","load","setProxy","sync"],"property":["batchUpdateMode","defaultProxyType","filterOnLoad","filters","groupers","isDestroyed","sortOnLoad"],"event":["add","beforeload","beforesync","datachanged","load","remove","update"],"config":["autoLoad","autoSync","proxy","storeId"]},"Ext.data.AjaxProxy":{"method":["getMethod"],"property":["actionMethods"],"event":["exception"],"config":["headers"]},"Ext.data.ArrayReader":{"method":[],"property":[],"event":[],"config":[]},"Ext.data.Association":{"method":["getReader"],"property":["associatedName","ownerName"],"event":[],"config":["associatedModel","ownerModel","primaryKey","reader"]},"Ext.data.Batch":{"method":["add","pause","runOperation","start"],"property":["autoStart","current","hasException","isComplete","isRunning","operations","pauseOnException","total"],"event":["complete","exception","operationcomplete"],"config":[]},"Ext.data.BelongsToAssociation":{"method":["getPageFromRecordIndex","guaranteeRange","hasPendingRequests","prefetch"],"property":[],"event":[],"config":["foreignKey","getterName","setterName"]},"Ext.data.ClientProxy":{"method":["clear"],"property":[],"event":[],"config":[]},"Ext.data.Connection":{"method":["abort","isLoading","parseStatus","request","setupOptions","upload"],"property":["onreadystatechange"],"event":["beforerequest","requestcomplete","requestexception"],"config":["disableCaching","disableCachingParam","timeout"]},"Ext.data.DirectProxy":{"method":[],"property":[],"event":[],"config":["api","directFn","paramOrder","paramsAsHash"]},"Ext.data.Errors":{"method":["getByField","isValid"],"property":[],"event":[],"config":[]},"Ext.data.HasManyAssociation":{"method":[],"property":[],"event":[],"config":["filterProperty","foreignKey","name","storeConfig"]},"Ext.data.JsonReader":{"method":["readRecords"],"property":["jsonData"],"event":[],"config":["record","useSimpleAccessors"]},"Ext.data.LocalStorageProxy":{"method":[],"property":[],"event":[],"config":[]},"Ext.data.MemoryProxy":{"method":["read"],"property":[],"event":[],"config":["data"]},"Ext.data.Model":{"method":["Ext.data.Model.id","Ext.data.Model.load","Ext.data.Model.setProxy","destroy","getAssociatedData","getId","getProxy","isValid","join","save","setId","unjoin","validate"],"property":["defaultProxyType","phantom","store"],"event":[],"config":["idProperty"]},"Ext.data.Node":{"method":["appendChild","bubble","cascadeBy","contains","destroy","eachChild","findChild","findChildBy","getChildAt","getDepth","getOwnerTree","getPath","hasChildNodes","indexOf","insertBefore","isAncestor","isExpandable","isFirst","isLast","isLeaf","remove","removeAll","removeChild","replaceChild","setId","sort"],"property":["attributes","childNodes","firstChild","id","lastChild","nextSibling","parentNode","previousSibling"],"event":["append","beforeappend","beforeinsert","beforemove","beforeremove","insert","move","remove"],"config":["id","leaf"]},"Ext.data.NodeInterface":{"method":["Ext.data.NodeInterface.decorate","appendChild","bubble","cascadeBy","contains","copy","createNode","destroy","eachChild","findChild","findChildBy","getChildAt","getDepth","hasChildNodes","indexOf","insertBefore","isAncestor","isExpandable","isFirst","isLast","isLeaf","remove","removeAll","removeChild","replaceChild","sort","updateInfo"],"property":[],"event":["append","beforeappend","beforecollapse","beforecollapse","beforeexpand","beforeinsert","beforemove","beforeremove","collapse","expand","insert","move","remove"],"config":[]},"Ext.data.NodeStore":{"method":[],"property":[],"event":[],"config":["node","recursive","rootVisible"]},"Ext.data.Operation":{"method":["allowWrite","getError","getRecords","getResultSet","hasException","isComplete","isRunning","isStarted","setCompleted","setException","setStarted","setSuccessful","wasSuccessful"],"property":[],"event":[],"config":["action","batch","filters","group","limit","sorters","start","synchronous"]},"Ext.data.Proxy":{"method":["batch","create","destroy","getModel","getReader","getWriter","read","setModel","setReader","setWriter","update"],"property":[],"event":[],"config":["batchActions","batchOrder","model"]},"Ext.data.Reader":{"method":["getResponseData","read","readRecords"],"property":["rawData"],"event":[],"config":["idProperty","implicitIncludes","messageProperty","root","successProperty","totalProperty"]},"Ext.data.RestProxy":{"method":["buildUrl"],"property":["actionMethods"],"event":[],"config":["appendId","batchActions","format"]},"Ext.data.ScriptTagProxy":{"method":["abort","afterRequest","buildUrl","encodeRecords"],"property":["lastRequest"],"event":["exception"],"config":["autoAppendParams","callbackParam","callbackPrefix","recordParam","scriptIdPrefix"]},"Ext.data.ServerProxy":{"method":["afterRequest","buildRequest","buildUrl","doRequest","encodeFilters","encodeGroupers","encodeSorters","processResponse"],"property":[],"event":[],"config":["api","cacheString","dirParam","extraParams","filterParam","groupParam","limitParam","noCache","pageParam","reader","simpleSortMode","sortParam","startParam","timeout","url","writer"]},"Ext.data.SessionStorageProxy":{"method":[],"property":[],"event":[],"config":[]},"Ext.data.SortTypes":{"method":["asDate","asFloat","asInt","asText","asUCString","asUCText","none"],"property":["stripTagsRE"],"event":[],"config":[]},"Ext.data.Store":{"method":["add","aggregate","average","clearFilter","collect","count","each","filter","filterBy","find","findBy","findExact","findRecord","first","getAt","getById","getCount","getGroupString","getGroups","getRange","getTotalCount","indexOf","indexOfId","indexOfTotal","insert","isFiltered","isLoading","last","load","loadData","loadPage","loadRecords","max","min","nextPage","previousPage","queryBy","remove","removeAt","sum"],"property":["currentPage","data","for","groupDir","groupField","pageSize","snapshot"],"event":[],"config":["clearOnPageLoad","data","proxy","remoteFilter","remoteSort","sortOnFilter"]},"Ext.data.StoreMgr":{"method":["lookup","register","unregister"],"property":[],"event":[],"config":[]},"Ext.data.Tree":{"method":["getNodeById","getRootNode","setRootNode"],"property":["root","root"],"event":["append","append","beforeappend","beforeappend","beforecollapse","beforeexpand","beforeinsert","beforeinsert","beforemove","beforemove","beforeremove","beforeremove","collapse","expand","insert","insert","move","move","remove","remove"],"config":["pathSeparator","pathSeparator"]},"Ext.data.TreeStore":{"method":["getAncestors","getChildren","getNodeById","getParent","getRootNode","getSubStore","insert","isLeaf","isRoot","move","remove"],"property":[],"event":["append","beforeappend","beforecollapse","beforeexpand","beforeinsert","beforemove","beforeremove","collapse","expand","insert","move","remove","sort"],"config":["clearOnLoad","clearOnLoad","defaultRootId","defaultRootId","folderSort","leftField","nodeParam","nodeParam","parentField","rightField"]},"Ext.data.validations":{"method":["exclusion","format","inclusion","length","presence"],"property":["exclusionMessage","formatMessage","inclusionMessage","lengthMessage","presenceMessage"],"event":[],"config":[]},"Ext.data.WebStorageProxy":{"method":["clear","setRecord"],"property":["cache"],"event":[],"config":["id"]},"Ext.data.Writer":{"method":["getRecordData","write"],"property":[],"event":[],"config":["nameProperty","writeAllFields"]},"Ext.data.XmlReader":{"method":["getData","readRecords"],"property":["xmlData"],"event":[],"config":["record"]},"Ext.data.XmlWriter":{"method":[],"property":[],"event":[],"config":["defaultDocumentRoot","documentRoot","header","record"]},"Ext.DataView":{"method":["clearHighlight","highlightItem"],"property":[],"event":["beforecontainerclick","beforecontainercontextmenu","beforecontainerdblclick","beforecontainermousedown","beforecontainermouseout","beforecontainermouseover","beforecontainermouseup","beforeitemclick","beforeitemcontextmenu","beforeitemdblclick","beforeitemmousedown","beforeitemmouseenter","beforeitemmouseleave","beforeitemmouseup","beforeselect","containerclick","containercontextmenu","containerdblclick","containermouseout","containermouseover","containermouseup","itemclick","itemcontextmenu","itemdblclick","itemmousedown","itemmouseenter","itemmouseleave","itemmouseup","selectionchange"],"config":[]},"Ext.Date":{"method":["Ext.Date.formatContainsDateInfo","Ext.Date.formatContainsHourInfo","Ext.Date.getMonthNumber","Ext.Date.getShortDayName","Ext.Date.getShortMonthName","Ext.Date.isValid","Ext.Date.parse","add","between","clearTime","clone","getDayOfYear","getDaysInMonth","getElapsed","getFirstDateOfMonth","getFirstDayOfMonth","getGMTOffset","getLastDateOfMonth","getLastDayOfMonth","getSuffix","getTimezone","getWeekOfYear","isDST","isLeapYear","now"],"property":["Ext.Date.DAY","Ext.Date.HOUR","Ext.Date.MILLI","Ext.Date.MINUTE","Ext.Date.MONTH","Ext.Date.SECOND","Ext.Date.YEAR","Ext.Date.dayNames","Ext.Date.defaultFormat","Ext.Date.defaults","Ext.Date.formatCodes","Ext.Date.formatFunctions","Ext.Date.monthNames","Ext.Date.monthNumbers","Ext.Date.parseFunctions","Ext.Date.useStrict","Most","a"],"event":[],"config":[]},"Ext.dd.DD":{"method":["alignElWithMouse","applyConfig","autoOffset","b4Drag","b4MouseDown","cachePosition","setDelta","setDragElPos"],"property":["scroll"],"event":[],"config":[]},"Ext.dd.DDProxy":{"method":["createFrame","initFrame"],"property":["Ext.dd.DDProxy.dragElId","centerFrame","resizeFrame"],"event":[],"config":[]},"Ext.dd.DDTarget":{"method":[],"property":[],"event":[],"config":[]},"Ext.dd.DragDrop":{"method":["addInvalidHandleClass","addInvalidHandleId","addInvalidHandleType","addToGroup","applyConfig","clearConstraints","clearTicks","constrainTo","endDrag","getDragEl","getEl","init","initTarget","isLocked","isValidHandleChild","lock","onAvailable","onDrag","onDragDrop","onDragEnter","onDragOut","onDragOver","onInvalidDrop","onMouseDown","onMouseUp","removeFromGroup","removeInvalidHandleClass","removeInvalidHandleId","removeInvalidHandleType","resetConstraints","setDragElId","setHandleElId","setInitPosition","setOuterHandleElId","setPadding","setXConstraint","setYConstraint","startDrag","toString","unlock","unreg"],"property":["available","config","defaultPadding","groups","hasOuterHandles","id","ignoreSelf","invalidHandleClasses","invalidHandleIds","invalidHandleTypes","isTarget","maintainOffset","moveOnly","padding","primaryButtonOnly","xTicks","yTicks"],"event":[],"config":[]},"Ext.dd.DragDropMgr":{"method":["Ext.dd.DragDropMgr.getBestMatch","Ext.dd.DragDropMgr.getCss","Ext.dd.DragDropMgr.getDDById","Ext.dd.DragDropMgr.getElement","Ext.dd.DragDropMgr.getLocation","Ext.dd.DragDropMgr.getRelated","Ext.dd.DragDropMgr.isDragDrop","Ext.dd.DragDropMgr.isHandle","Ext.dd.DragDropMgr.isLegalTarget","Ext.dd.DragDropMgr.isLocked","Ext.dd.DragDropMgr.isTypeOfDD","Ext.dd.DragDropMgr.lock","Ext.dd.DragDropMgr.refreshCache","Ext.dd.DragDropMgr.regDragDrop","Ext.dd.DragDropMgr.regHandle","Ext.dd.DragDropMgr.startDrag","Ext.dd.DragDropMgr.stopEvent","Ext.dd.DragDropMgr.unlock","Ext.dd.DragDropMgr.verifyEl"],"property":["Ext.dd.DragDropMgr.INTERSECT","Ext.dd.DragDropMgr.POINT","Ext.dd.DragDropMgr.clickPixelThresh","Ext.dd.DragDropMgr.clickTimeThresh","Ext.dd.DragDropMgr.mode","Ext.dd.DragDropMgr.preventDefault","Ext.dd.DragDropMgr.stopPropagation","Ext.dd.DragDropMgr.useCache"],"event":[],"config":[]},"Ext.dd.DragSource":{"method":["afterDragDrop","afterDragEnter","afterDragOut","afterDragOver","afterInvalidDrop","beforeDragDrop","beforeDragEnter","beforeDragOut","beforeDragOver","beforeInvalidDrop","getDragData","getProxy","hideProxy","onBeforeDrag","onStartDrag"],"property":[],"event":[],"config":["animRepair","ddGroup","dropAllowed","dropNotAllowed"]},"Ext.dd.DragTracker":{"method":["getDragTarget","getOffset","initEl","onBeforeStart","onDrag","onEnd","onStart"],"property":["active","dragTarget"],"event":["drag","dragend","dragstart","mousedown","mousemove","mouseout","mouseover","mouseup"],"config":["autoStart","constrainTo","delegate","overCls","preventDefault","stopEvent","tolerance","trackOver"]},"Ext.dd.DragZone":{"method":["afterRepair","getDragData","getRepairXY","onInitDrag"],"property":["dragData"],"event":[],"config":["containerScroll","hlColor"]},"Ext.dd.DropTarget":{"method":["notifyDrop","notifyEnter","notifyOut","notifyOver"],"property":[],"event":[],"config":["ddGroup","dropAllowed","dropNotAllowed","overClass"]},"Ext.dd.DropZone":{"method":["getTargetFromEvent","notifyDrop","notifyEnter","notifyOut","notifyOver","onContainerDrop","onContainerOver","onNodeDrop","onNodeEnter","onNodeOut","onNodeOver"],"property":[],"event":[],"config":[]},"Ext.dd.Registry":{"method":["getHandle","getHandleFromEvent","getTarget","getTargetFromEvent","register","unregister"],"property":[],"event":[],"config":[]},"Ext.dd.ScrollManager":{"method":["refreshCache","register","unregister"],"property":["animDuration","animate","ddGroup","frequency","hthresh","increment","vthresh"],"event":[],"config":[]},"Ext.dd.StatusProxy":{"method":["getEl","getGhost","hide","repair","reset","setStatus","show","stop","sync","update"],"property":[],"event":[],"config":["dropAllowed","dropNotAllowed"]},"Ext.direct.Event":{"method":["getData"],"property":[],"event":[],"config":[]},"Ext.direct.JsonProvider":{"method":["createEvent"],"property":[],"event":[],"config":[]},"Ext.direct.Manager":{"method":["addProvider","getProvider","removeProvider"],"property":[],"event":["event","exception"],"config":[]},"Ext.direct.PollingProvider":{"method":["connect","disconnect"],"property":[],"event":["beforepoll","poll"],"config":["baseParams","interval","url"]},"Ext.direct.Provider":{"method":["isConnected"],"property":["connect","disconnect"],"event":["connect","data","disconnect","exception"],"config":["id"]},"Ext.direct.RemotingEvent":{"method":["getTransaction"],"property":[],"event":[],"config":[]},"Ext.direct.RemotingMethod":{"method":["getCallData"],"property":[],"event":[],"config":[]},"Ext.direct.RemotingProvider":{"method":[],"property":[],"event":["beforecall","call"],"config":["actions","enableBuffer","enableUrlEncode","maxRetries","namespace","timeout","url"]},"Ext.Dispatcher":{"method":[],"property":[],"event":[],"config":[]},"Ext.DomQuery":{"method":["compile","filter","is","jsSelect","operators","selectNode","selectNumber","selectValue"],"property":["matchers","pseudos"],"event":[],"config":[]},"Ext.draw.Color":{"method":["constructor","fromHSL","fromString","getBlue","getDarker","getGrayscale","getGreen","getHSL","getLighter","getRGB","getRed","toHex","toString"],"property":[],"event":[],"config":["lightnessFactor"]},"Ext.draw.Component":{"method":["createSurface","onDestroy","onRender"],"property":[],"event":[],"config":["autoSize","implOrder","viewBox"]},"Ext.draw.engine.SVG":{"method":["applyZIndex","getRegion","hasCls"],"property":[],"event":[],"config":[]},"Ext.draw.engine.VML":{"method":["addGradient"],"property":[],"event":[],"config":[]},"Ext.draw.Sprite":{"method":["addCls","getBBox","hide","redraw","removeCls","setAttributes","setStyle","show"],"property":[],"event":[],"config":[]},"Ext.draw.SpriteGroup":{"method":["destroy"],"property":[],"event":[],"config":[]},"Ext.draw.Surface":{"method":["addCls","getId","newInstance","positionSpriteInList","removeCls"],"property":["addGradient"],"event":[],"config":["height","width"]},"Ext.Editor":{"method":["cancelEdit","completeEdit","getValue","realign","setValue","startEdit"],"property":[],"event":["beforecomplete","beforestartedit","canceledit","complete","specialkey","startedit"],"config":["alignment","allowBlur","autoSize","cancelOnEsc","completeOnEnter","constrain","field","hideEl","ignoreNoChange","offsets","parentEl","revertInvalid","shadow","swallowKeys","updateEl","value"]},"Ext.ElementLoader":{"method":["abort","destroy","getTarget","isAutoRefreshing","load","setTarget","startAutoRefresh","stopAutoRefresh"],"property":[],"event":["beforeload","exception","exception"],"config":["ajaxOptions","autoLoad","baseParams","failure","loadMask","params","renderer","scope","scripts","success","target","url"]},"Ext.env.Browser":{"method":["is"],"property":["engineName","engineVersion","isSecure","isStrict","name","version"],"event":[],"config":[]},"Ext.EventManager":{"method":["addListener","getId","getKeyEvent","getPageX","getPageXY","getPageY","getRelatedTarget","getTarget","on","onDocumentReady","onWindowResize","preventDefault","purgeElement","removeAll","removeListener","removeResizeListener","removeUnloadListener","stopEvent","stopPropagation","un"],"property":[],"event":[],"config":[]},"Ext.EventObject":{"method":["getCharCode","getKey","getPageX","getPageY","getPoint","getRelatedTarget","getTarget","getWheelDelta","getXY","hasModifier","isNavKeyPress","isSpecialKey","preventDefault","stopEvent","stopPropagation","within"],"property":["A","ALT","B","BACKSPACE","C","CAPS_LOCK","CONTEXT_MENU","CTRL","D","DELETE","DOWN","E","EIGHT","END","ENTER","ESC","F","F1","F10","F11","F12","F2","F3","F4","F5","F6","F7","F8","F9","FIVE","FOUR","G","H","HOME","I","INSERT","J","K","L","LEFT","M","N","NINE","NUM_CENTER","NUM_DIVISION","NUM_EIGHT","NUM_FIVE","NUM_FOUR","NUM_MINUS","NUM_MULTIPLY","NUM_NINE","NUM_ONE","NUM_PERIOD","NUM_PLUS","NUM_SEVEN","NUM_SIX","NUM_THREE","NUM_TWO","NUM_ZERO","O","ONE","P","PAGE_DOWN","PAGE_UP","PAUSE","PRINT_SCREEN","Q","R","RETURN","RIGHT","S","SEVEN","SHIFT","SIX","SPACE","T","TAB","THREE","TWO","U","UP","V","W","X","Y","Z","ZERO"],"event":[],"config":[]},"Ext.FocusManager":{"method":["addWhitelistXType","disable","enable","removeWhitelistXType","subscribe","unsubscribe"],"property":["{Array}","{Boolean}","{Ext.Component}"],"event":["beforecomponentfocus","componentfocus","disable","enable"],"config":[]},"Ext.form.action.Action":{"method":[],"property":["Ext.form.action.Action.CLIENT_INVALID","Ext.form.action.Action.CONNECT_FAILURE","Ext.form.action.Action.LOAD_FAILURE","Ext.form.action.Action.SERVER_INVALID","failureType","response","result","run","type"],"event":[],"config":["failure","form","headers","method","params","reset","scope","submitEmptyText","success","timeout","url","waitMsg","waitTitle"]},"Ext.form.action.DirectLoad":{"method":[],"property":[],"event":[],"config":[]},"Ext.form.action.DirectSubmit":{"method":[],"property":[],"event":[],"config":[]},"Ext.form.action.Load":{"method":[],"property":[],"event":[],"config":[]},"Ext.form.action.StandardSubmit":{"method":[],"property":[],"event":[],"config":["target"]},"Ext.form.action.Submit":{"method":[],"property":[],"event":[],"config":["clientValidation"]},"Ext.form.BaseField":{"method":["clearInvalid","getInputId","getRawValue","getSubTplData","getSubTplMarkup","getSubmitValue","getValue","isValid","markInvalid","processRawValue","rawToValue","setRawValue","setReadOnly","setValue","validateValue","valueToRaw"],"property":["inputEl"],"event":["blur","focus","specialkey"],"config":["checkChangeBuffer","checkChangeEvents","dirtyCls","fieldCls","fieldSubTpl","focusCls","inputId","inputType","invalidText","name","readOnly","tabIndex"]},"Ext.form.Basic":{"method":["applyIfToFields","applyToFields","checkDirty","checkValidity","clearInvalid","destroy","doAction","findField","getFields","getValues","hasInvalidField","hasUpload","isDirty","isValid","load","loadRecord","markInvalid","reset","setValues","submit","updateRecord"],"property":["owner"],"event":["actioncomplete","actionfailed","beforeaction","dirtychange","validitychange"],"config":["api","baseParams","errorReader","method","paramOrder","paramsAsHash","reader","standardSubmit","timeout","trackResetOnLoad","url","waitMsgTarget","waitTitle"]},"Ext.form.Checkbox":{"method":["getRawValue","getSubmitValue","getValue","setRawValue","setValue"],"property":["boxLabelEl","originalValue"],"event":[],"config":["boxLabel","checkChangeEvents","checked","fieldBodyCls","fieldCls","focusCls","handler","inputValue","scope"]},"Ext.form.CheckboxGroup":{"method":["getChecked","getErrors","getValue","initValue","onFieldAdded","reset","setValue"],"property":[],"event":[],"config":["allowBlank","blankText","columns","fieldBodyCls","items","vertical"]},"Ext.form.ComboBox":{"method":["clearValue","doQuery","select","setValue"],"property":["lastQuery"],"event":["beforequery"],"config":["allQuery","autoSelect","defaultListConfig","delimiter","displayField","forceSelection","listConfig","minChars","multiSelect","pageSize","queryDelay","queryMode","queryParam","selectOnTab","store","triggerAction","triggerCls","typeAhead","typeAheadDelay","valueField","valueNotFoundText"]},"Ext.form.Date":{"method":["getErrors","safeParse","setDisabledDates","setDisabledDays","setMaxValue","setMinValue","setValue"],"property":[],"event":[],"config":["altFormats","disabledDates","disabledDatesText","disabledDays","disabledDaysText","format","invalidText","maxText","maxValue","minText","minValue","showToday","submitFormat","triggerCls"]},"Ext.form.Display":{"method":[],"property":[],"event":[],"config":["fieldCls","htmlEncode"]},"Ext.form.Field":{"method":["areValuesEqual","batchChanges","checkChange","checkDirtyChange","getErrors","getFileInput","getName","getSubmitData","getValue","initField","initValue","isDirty","isFileUpload","isValid","reset","resetOriginalValue","setValue","validate"],"property":["isFormField","originalValue"],"event":["change","dirtychange","validitychange"],"config":["disabled","name","submitValue","validateOnChange","value"]},"Ext.form.FieldAncestor":{"method":["initFieldAncestor","onFieldAdded","onFieldErrorChange","onFieldRemoved","onFieldValidityChange","onLabelableAdded","onLabelableRemoved"],"property":[],"event":["fielderrorchange","fielderrorchange"],"config":["fieldDefaults"]},"Ext.form.FieldContainer":{"method":["buildCombinedError","getFieldLabel","onLabelableAdded","onLabelableRemoved"],"property":[],"event":[],"config":["combineErrors","combineLabels","labelConnector"]},"Ext.form.FieldSet":{"method":["collapse","createCheckboxCmp","createTitleCmp","createToggleCmp","expand","setTitle","toggle"],"property":["checkboxCmp","legend","toggleCmp"],"event":[],"config":["baseCls","checkboxName","checkboxToggle","collapsed","collapsible","layout","title"]},"Ext.form.FormPanel":{"method":["checkChanges","getForm","load","startPolling","stopPolling","submit"],"property":[],"event":[],"config":["layout","minButtonWidth","pollForChanges","pollInterval"]},"Ext.form.Hidden":{"method":[],"property":[],"event":[],"config":[]},"Ext.form.HtmlEditor":{"method":["cleanHtml","execCmd","getDocMarkup","getToolbar","insertAtCursor","pushValue","relayCmd","setReadOnly","syncValue","toggleSourceEdit","updateToolbar"],"property":["buttonTips"],"event":["activate","beforepush","beforesync","editmodechange","initialize","push","sync"],"config":["createLinkText","defaultLinkValue","defaultValue","enableAlignments","enableColors","enableFont","enableFontSize","enableFormat","enableLinks","enableLists","enableSourceEdit","fontFamilies"]},"Ext.form.Label":{"method":["setText"],"property":[],"event":[],"config":["forId","html","text"]},"Ext.form.Labelable":{"method":["applyFieldDefaults","getActiveError","getFieldLabel","getInputId","getLabelableRenderData","getLabelableSelectors","getSubTplMarkup","hasActiveError","initLabelable","setActiveError","unsetActiveError"],"property":["bodyEl","errorEl","isFieldLabelable","labelEl"],"event":["errorchange"],"config":["activeError","autoFitErrors","baseBodyCls","clearCls","errorMsgCls","fieldBodyCls","fieldLabel","formItemCls","hideLabel","invalidCls","labelAlign","labelCls","labelPad","labelSeparator","labelStyle","labelWidth","labelableRenderTpl","msgTarget","preventMark"]},"Ext.form.Number":{"method":["getErrors","setMaxValue","setMinValue"],"property":[],"event":[],"config":["allowDecimals","autoStripChars","baseChars","decimalPrecision","decimalSeparator","maxText","maxValue","minText","minValue","nanText","negativeText","step"]},"Ext.form.Picker":{"method":["alignPicker","collapse","createPicker","expand","getPicker","onTriggerClick"],"property":["isExpanded"],"event":["collapse","expand","select"],"config":["matchFieldWidth","openCls","pickerAlign","pickerOffset"]},"Ext.form.Radio":{"method":["getGroupValue","setRawValue"],"property":[],"event":[],"config":[]},"Ext.form.RadioGroup":{"method":[],"property":[],"event":[],"config":["allowBlank","blankText","items"]},"Ext.form.Spinner":{"method":["setSpinDownEnabled","setSpinUpEnabled","spinDown","spinUp"],"property":["onSpinDown","onSpinUp","spinDownEl","spinUpEl"],"event":["spin","spindown","spinup"],"config":["keyNavEnabled","mouseWheelEnabled","repeatTriggerClick","spinDownEnabled","spinUpEnabled"]},"Ext.form.Text":{"method":["autoSize","getErrors","getRawValue","processRawValue","reset","selectText","setValue"],"property":[],"event":["autosize","keydown","keypress","keyup"],"config":["allowBlank","blankText","disableKeyFilter","emptyCls","emptyText","enableKeyEvents","enforceMaxLength","grow","growAppend","growMax","growMin","maskRe","maxLength","maxLengthText","minLength","minLengthText","regex","regexText","selectOnFocus","stripCharsRe","validator","vtype","vtypeText"]},"Ext.form.TextArea":{"method":["autoSize"],"property":[],"event":[],"config":["enterIsSpecial","growAppend","growMax","growMin","preventScrollbars"]},"Ext.form.Time":{"method":["getErrors","setMaxValue","setMinValue"],"property":[],"event":[],"config":["altFormats","format","increment","invalidText","maxText","maxValue","minText","minValue","pickerMaxHeight","selectOnTab","submitFormat","triggerCls"]},"Ext.form.Trigger":{"method":["getTriggerWidth","onTriggerClick","setEditable","setReadOnly"],"property":["triggerEl","triggerWrap"],"event":[],"config":["editable","hideTrigger","readOnly","repeatTriggerClick","selectOnFocus","triggerBaseCls","triggerCls","triggerWrapCls","wrapFocusClass"]},"Ext.form.VTypes":{"method":["alpha","alphanum","email","url"],"property":["alphaMask","alphaText","alphanumMask","alphanumText","emailMask","emailText","urlText"],"event":[],"config":[]},"Ext.Function":{"method":["alias","bind","createBuffered","createInterceptor","createSequence","createThrottled","defer","flexSetter","pass"],"property":[],"event":[],"config":[]},"Ext.fx.Anim":{"method":[],"property":["currentIteration","paused","running","startTime"],"event":["afteranimate","beforeanimate","lastframe"],"config":["alternate","delay","duration","dynamic","easing","from","iterations","keyframes","reverse","target","to"]},"Ext.grid.ActionHeader":{"method":[],"property":[],"event":[],"config":["altText","getClass","handler","icon","iconCls","items","scope","stopSelection","tooltip"]},"Ext.grid.BooleanHeader":{"method":[],"property":[],"event":[],"config":["falseText","trueText","undefinedText"]},"Ext.grid.CellEditing":{"method":["completeEdit","getEditor","startEdit","startEditByPosition"],"property":[],"event":[],"config":["clicksToEdit"]},"Ext.grid.ChunkingFeature":{"method":[],"property":[],"event":[],"config":[]},"Ext.grid.ColumnLayout":{"method":[],"property":[],"event":[],"config":[]},"Ext.grid.DateHeader":{"method":[],"property":[],"event":[],"config":["format"]},"Ext.grid.Editing":{"method":["isFieldEditable","startEditing"],"property":[],"event":["afteredit","beforeedit","validateedit"],"config":["autoEncode","clicksToEdit","forceValidation"]},"Ext.grid.Feature":{"method":["attachEvents","disable","enable","getAdditionalData","getMetaRowTplFragments","mutateMetaRowTpl"],"property":["collectData","{Boolean}","{Ext.grid.GridPanel}","{Ext.view.TableView}","{String}","{String}"],"event":[],"config":[]},"Ext.grid.GridPanel":{"method":[],"property":[],"event":[],"config":["columnLines"]},"Ext.grid.GridView":{"method":[],"property":[],"event":[],"config":["stripeRows"]},"Ext.grid.GroupingFeature":{"method":[],"property":[],"event":["groupclick","groupcollapse","groupcontextmenu","groupdblclick","groupexpand"],"config":["depthToIndent","enableGroupingMenu","enableNoGroups","groupByText","groupHdTpl","hideGroupedHeader<tt>true</tt>","showGroupsText","startCollapsed"]},"Ext.grid.GroupingSummaryFeature":{"method":[],"property":[],"event":[],"config":["remoteRoot."]},"Ext.grid.Header":{"method":["getEditingField","getSortParam","setEditingField"],"property":["{Ext.core.Element}","{Ext.core.Element}"],"event":[],"config":["align","dataIndex","draggable","hideable","menuDisabled","renderer","sortable","text"]},"Ext.grid.HeaderContainer":{"method":["getColumnCount","getColumnsMenu","getFullWidth","getGridColumns","getHeaderByIndex","getIndexOfHeader","getMenuItems","getVisibleGridColumns","prepareData"],"property":["isGroupHeader"],"event":["headerclick","headerclick","headerhide","headermove","headerresize","headershow","sortchange"],"config":["defaultWidth","sortable","weight"]},"Ext.grid.HeaderResizer":{"method":[],"property":[],"event":[],"config":["dynamic"]},"Ext.grid.LockingGridPanel":{"method":["getSelectionModel"],"property":[],"event":[],"config":["columnLines"]},"Ext.grid.NumberHeader":{"method":[],"property":[],"event":[],"config":["format"]},"Ext.grid.RowBodyFeature":{"method":["getAdditionalData"],"property":[],"event":[],"config":[]},"Ext.grid.RowEditing":{"method":["initEditor"],"property":["clicksToEdit","errorSummary","grid"],"event":[],"config":[]},"Ext.grid.RowEditor":{"method":[],"property":[],"event":[],"config":[]},"Ext.grid.RowNumberer":{"method":[],"property":[],"event":[],"config":["text","width"]},"Ext.grid.Section":{"method":[],"property":["hasGridView"],"event":[],"config":[]},"Ext.grid.SummaryFeature":{"method":[],"property":[],"event":[],"config":[]},"Ext.grid.TemplateHeader":{"method":[],"property":[],"event":[],"config":["tpl"]},"Ext.ImageComponent":{"method":["setSrc"],"property":[],"event":[],"config":["src"]},"Ext.JSON":{"method":["decode","encode","encodeDate"],"property":[],"event":[],"config":[]},"Ext.Layer":{"method":["setZIndex"],"property":[],"event":[],"config":["cls","constrain","dh","hideMode","shadow","shadowOffset","shim","useDisplay","visibilityCls","zindex"]},"Ext.layout.AbstractContainer":{"method":["getLayoutItems","getRenderTarget","getTarget"],"property":[],"event":[],"config":["bindToOwnerCtComponent","bindToOwnerCtContainer","itemCls"]},"Ext.layout.container.Absolute":{"method":[],"property":[],"event":[],"config":[]},"Ext.layout.container.AbstractCard":{"method":["getActiveItem","getNext","getPrev","next","prev"],"property":[],"event":[],"config":["deferredRender"]},"Ext.layout.container.AbstractFit":{"method":[],"property":[],"event":[],"config":[]},"Ext.layout.container.Accordion":{"method":[],"property":[],"event":[],"config":["activeOnTop","animate","autoWidth","collapseFirst","fill","hideCollapseTool","multi","titleCollapse"]},"Ext.layout.container.Anchor":{"method":[],"property":[],"event":[],"config":["anchor","defaultAnchor"]},"Ext.layout.container.Auto":{"method":[],"property":[],"event":[],"config":[]},"Ext.layout.container.Border":{"method":["getPlaceHolder"],"property":["if"],"event":[],"config":[]},"Ext.layout.container.Box":{"method":["updateChildBoxes"],"property":[],"event":[],"config":["animate","clearInnerCtOnLayout","defaultMargins","flex","pack","padding"]},"Ext.layout.container.Card":{"method":[],"property":[],"event":[],"config":[]},"Ext.layout.container.CheckboxGroup":{"method":[],"property":[],"event":[],"config":[]},"Ext.layout.container.Column":{"method":[],"property":[],"event":[],"config":[]},"Ext.layout.container.Fit":{"method":[],"property":[],"event":[],"config":[]},"Ext.layout.container.HBox":{"method":[],"property":[],"event":[],"config":["align"]},"Ext.layout.container.Table":{"method":[],"property":[],"event":[],"config":["columns","tableAttrs"]},"Ext.layout.container.VBox":{"method":[],"property":[],"event":[],"config":["align"]},"Ext.Loader":{"method":["enableSyncMode","exclude","getConfig","getPath","onReady","requirePackages","setConfig","setPath"],"property":["history"],"event":[],"config":["enableCacheBuster","enableDeadlockDetection","enabled","paths"]},"Ext.LoadMask":{"method":["bindStore","disable","enable","hide","isDisabled","show"],"property":["disabled"],"event":[],"config":["msg","msgCls","store"]},"Ext.menu.CheckItem":{"method":["disableCheckChange","enableCheckChange","setChecked"],"property":[],"event":["beforecheckchange","checkchange"],"config":["checkedCls","groupCls","hideOnClick","uncheckedCls"]},"Ext.menu.ColorMenu":{"method":[],"property":["picker"],"event":["select"],"config":["hideOnClick","pickerId"]},"Ext.menu.DateMenu":{"method":[],"property":["picker"],"event":["select"],"config":["hideOnClick","pickerId"]},"Ext.menu.Item":{"method":["setHandler","setIconClass","setText"],"property":["{Boolean}"],"event":["activate","click","deactivate"],"config":["activeCls","canActivate","clickHideDelay","destroyMenu","disabledCls","hideOnClick","href","hrefTarget","icon","iconCls","menu","menuAlign","menuExpandDelay","menuHideDelay","plain","text"]},"Ext.menu.Menu":{"method":["canActivateItem","deactivateActiveItem","itemFromEvent","itemFromObject","itemFromString","showBy"],"property":[],"event":["click","mouseleave","mouseover"],"config":["allowOtherMenus","defaultAlign","floating","hidden","ignoreParentClicks","minWidth","plain","showSeparator"]},"Ext.menu.MenuManager":{"method":["get","hideAll"],"property":[],"event":[],"config":[]},"Ext.menu.Separator":{"method":[],"property":[],"event":[],"config":["separatorCls"]},"Ext.ModelMgr":{"method":["create","getModel","registerType"],"property":["associationStack"],"event":[],"config":[]},"Ext.Number":{"method":["constrain","num","toFixed"],"property":[],"event":[],"config":[]},"Ext.Object":{"method":["each","getKeys","getSize","getValues","keyOf","merge","toQueryString"],"property":[],"event":[],"config":[]},"Ext.panel.Header":{"method":["addTool","setIconClass","setTitle"],"property":[],"event":[],"config":[]},"Ext.panel.Panel":{"method":["close","collapse","expand","setIconClass","setTitle","toggleCollapse"],"property":["dd"],"event":[],"config":["animCollapse","bbar","buttons","closable","closeAction","collapseDirection","collapseFirst","collapseMode","collapsed","collapsedCls","collapsible","dockedItems","fbar","floatable","frame","frameHeader","headerPosition","hideCollapseTool","minButtonWidth","placeHolder","preventHeader","tbar","titleCollapse"]},"Ext.panel.Proxy":{"method":["getEl","getGhost","getProxy","hide","moveProxy","show"],"property":["panel"],"event":[],"config":["insertProxy"]},"Ext.panel.Tool":{"method":["onMouseDown","onMouseOut","onMouseOver"],"property":[],"event":[],"config":[]},"Ext.picker.Color":{"method":["getValue","select"],"property":["colors"],"event":["select"],"config":["allowReselect","clickEvent","componentCls","handler","scope","selectedCls","value"]},"Ext.picker.Date":{"method":["getValue","hideMonthPicker","selectToday","setDisabledDates","setDisabledDays","setMaxDate","setMinDate","setValue","showMonthPicker","showNextMonth","showNextYear","showPrevMonth","showPrevYear"],"property":[],"event":["select"],"config":["baseCls","dayNames","disableAnim","disabledCellCls","disabledDates","disabledDatesRE","disabledDatesText","disabledDays","disabledDaysText","focusOnShow","format","handler","longDayFormat","maxDate","maxText","minDate","minText","monthNames","monthYearText","nextText","prevText","scope","selectedCls","showToday","startDay","todayText","todayTip"]},"Ext.picker.Time":{"method":["setMaxValue","setMinValue","updateList"],"property":[],"event":[],"config":["format","increment","maxValue","minValue"]},"Ext.PluginMgr":{"method":["create","findByType"],"property":[],"event":[],"config":[]},"Ext.ProgressBar":{"method":["isWaiting","reset","updateProgress","updateText","wait"],"property":[],"event":["update"],"config":["animate","baseCls","id","text","text","textEl","value"]},"Ext.resizer.ResizeHandle":{"method":[],"property":[],"event":[],"config":[]},"Ext.resizer.Resizer":{"method":["getEl","getTarget","resizeTo"],"property":["el","originalTarget","resizeTracker"],"event":["beforeresize","resize","resizedrag"],"config":["<p>Specify","constrainTo","handles","height","maxHeight","maxWidth","minHeight","minWidth","pinned","preserveRatio","target","transparent","width"]},"Ext.resizer.ResizeTracker":{"method":[],"property":[],"event":[],"config":[]},"Ext.resizer.Splitter":{"method":[],"property":["orientation"],"event":[],"config":["collapseOnDblClick","collapseTarget","collapsible","defaultSplitMax","defaultSplitMin","performCollapse"]},"Ext.Router":{"method":[],"property":[],"event":[],"config":[]},"Ext.selection.CheckboxModel":{"method":["getHeaderConfig","onHeaderClick"],"property":[],"event":[],"config":["checkOnly","injectCheckbox"]},"Ext.selection.Model":{"method":["deselect","getLastSelected","getSelection","getSelectionMode","hasSelection","isFocused","isLocked","isSelected","select","selectRange","setLastFocused","setLocked","setSelectionMode"],"property":["selected"],"event":["selectionchange"],"config":["allowDeselect","mode"]},"Ext.selection.RowModel":{"method":[],"property":[],"event":["deselect","select"],"config":["enableKeyNav"]},"Ext.Shadow":{"method":["hide","isVisible","realign","setZIndex","show"],"property":[],"event":[],"config":["mode","offset"]},"Ext.slider.Multi":{"method":["addThumb","getValue","getValues","setMaxValue","setMinValue","setValue","syncThumbs"],"property":["dragging","thumbs"],"event":["beforechange","change","changecomplete","drag","dragend","dragstart"],"config":["animate","clickToChange","constrainThumbs","decimalPrecision.","increment","keyIncrement","maxValue","minValue","tipText","useTips","value","values","vertical"]},"Ext.slider.Single":{"method":["getValue","setValue"],"property":[],"event":[],"config":[]},"Ext.slider.Tip":{"method":["getText"],"property":[],"event":[],"config":[]},"Ext.state.CookieProvider":{"method":[],"property":[],"event":[],"config":["domain","expires","path","secure"]},"Ext.state.Manager":{"method":["clear","get","getProvider","set","setProvider"],"property":[],"event":[],"config":[]},"Ext.state.Provider":{"method":["clear","decodeValue","encodeValue","get","set"],"property":["var"],"event":["statechange"],"config":["prefix"]},"Ext.state.Stateful":{"method":["addStateEvents","applyState","destroy","getState","getStateId"],"property":["saveDelay"],"event":["beforestaterestore","beforestatesave","staterestore","statesave"],"config":["stateEvents","stateId","stateful"]},"Ext.String":{"method":["capitalize","ellipsis","escape","escapeRegex","format","htmlDecode","htmlEncode","leftPad","onReady","parseQueryString","toggle","trim","urlAppend"],"property":[null,"Slovak"],"event":[],"config":[]},"Ext.tab.Tab":{"method":["setCard","setClosable"],"property":["Boolean","closable"],"event":["activate","beforeclose","beforeclose","deactivate"],"config":["activeCls","closable","closableCls","closeText","disabledCls","pressedCls"]},"Ext.tab.TabBar":{"method":[],"property":[],"event":["change"],"config":["maxTabWidth","minTabWidth","plain"]},"Ext.tab.TabPanel":{"method":["getActiveTab","getTabBar","setActiveTab"],"property":["hasItemsLeft","tabBar"],"event":["beforetabchange","tabchange"],"config":["deferredRender","itemCls","layout","minTabWidth","plain","removePanelHeader","tabBar","tabPosition"]},"Ext.TaskMgr":{"method":[],"property":[],"event":[],"config":[]},"Ext.Template":{"method":["Ext.Template.from","add","addAll","append","apply","clear","clone","collect","contains","containsKey","each","eachKey","filter","filterBy","findBy","findIndex","findIndexBy","first","get","getAt","getByKey","getCount","getKey","getRange","indexOf","indexOfKey","insert","insertAfter","insertBefore","insertFirst","last","overwrite","remove","removeAll","removeAt","removeByKey","replace","set","sum"],"property":[],"event":["add","clear","remove","replace"],"config":["allowFunctions","disableFormats"]},"Ext.tip.QuickTip":{"method":["cancelShow","register","unregister"],"property":[],"event":[],"config":["interceptTitles","target"]},"Ext.tip.QuickTips":{"method":["destroy","disable","enable","getQuickTip","init","isEnabled","register","tips","unregister"],"property":[],"event":[],"config":[]},"Ext.tip.Tip":{"method":["showAt","showBy"],"property":[],"event":[],"config":["closable","constrainPosition","defaultAlign","maxWidth","minWidth","shadow","width"]},"Ext.tip.ToolTip":{"method":["hide","initTarget","show"],"property":["triggerElement"],"event":[],"config":["anchor","anchorOffset","anchorToTarget","autoHide","delegate","dismissDelay","hideDelay","mouseOffset","showDelay","target","trackMouse"]},"Ext.toolbar.Fill":{"method":[],"property":[],"event":[],"config":[]},"Ext.toolbar.Item":{"method":[],"property":[],"event":[],"config":["overflowText"]},"Ext.toolbar.PagingToolbar":{"method":["bind","bindStore","doRefresh","moveFirst","moveLast","moveNext","movePrevious","unbind"],"property":[],"event":["beforechange","change"],"config":["afterPageText","beforePageText","displayInfo","displayMsg","emptyMsg","firstText","inputItemWidth","lastText","nextText","prependButtons","prevText","refreshText","store"]},"Ext.toolbar.Separator":{"method":[],"property":[],"event":[],"config":[]},"Ext.toolbar.Spacer":{"method":[],"property":[],"event":[],"config":[]},"Ext.toolbar.TextItem":{"method":["addButton","addDom","addElement","addField","addFill","addItem","addSeparator","addSpacer","addText","insertButton","setText"],"property":[],"event":[],"config":["text"]},"Ext.toolbar.Toolbar":{"method":["add"],"property":[],"event":["overflowchange"],"config":["enableOverflow","layout","vertical"]},"Ext.tree.AsyncTreeNode":{"method":["isLoaded","isLoading","reload"],"property":["loader"],"event":["beforeload","load"],"config":["loader"]},"Ext.tree.DefaultSelectionModel":{"method":["clearSelections","getSelectedNode","isSelected","select","selectNext","selectPrevious","unselect"],"property":[],"event":["beforeselect","selectionchange"],"config":[]},"Ext.tree.MultiSelectionModel":{"method":["clearSelections","getSelectedNodes","isSelected","select","unselect"],"property":[],"event":["selectionchange"],"config":[]},"Ext.tree.TreeDragZone":{"method":[],"property":["tree"],"event":[],"config":["ddGroup"]},"Ext.tree.TreeDropZone":{"method":[],"property":["dragOverData","tree"],"event":[],"config":["allowContainerDrop","allowParentInsert","appendOnly","ddGroup","expandDelay"]},"Ext.tree.TreeEditor":{"method":["triggerEdit"],"property":["editNode"],"event":[],"config":["alignment","cls","editDelay","hideEl","maxWidth","shim"]},"Ext.tree.TreeFilter":{"method":["clear","filter","filterBy"],"property":[],"event":[],"config":[]},"Ext.tree.TreeLoader":{"method":["createNode","load"],"property":[],"event":["beforeload","load","loadexception"],"config":["baseAttrs","baseParams","clearOnLoad","dataUrl","directFn","nodeParameter","paramOrder","paramsAsHash","preloadChildren","requestMethod","uiProviders","url"]},"Ext.tree.TreeNode":{"method":["collapse","collapseChildNodes","disable","enable","ensureVisible","expand","expandChildNodes","getUI","isExpanded","isSelected","select","setCls","setHref","setIcon","setIconCls","setText","setTooltip","toggle","unselect"],"property":["disabled","hidden","text","ui"],"event":["beforechildrenrendered","beforeclick","beforecollapse","beforedblclick","beforeexpand","checkchange","click","collapse","contextmenu","dblclick","disabledchange","expand","textchange"],"config":["allowChildren","allowDrag","allowDrop","checked","cls","disabled","draggable","editable","expandable","expanded","hidden","href","hrefTarget","icon","iconCls","isTarget","qtip","qtipCfg","singleClickExpand","text","uiProvider"]},"Ext.tree.TreeNodeUI":{"method":["addCls","getAnchor","getEl","getIconEl","getTextEl","hide","isChecked","removeCls","show","toggleCheck"],"property":[],"event":[],"config":[]},"Ext.tree.TreePanel":{"method":["collapseAll","expandAll","expandPath","getChecked","getLoader","getNodeById","getRootNode","getSelectionModel","getTreeEl","selectPath","setRootNode"],"property":["dragZone","dropZone","root"],"event":["append","append","beforeappend","beforeappend","beforechildrenrendered","beforeclick","beforeclick","beforecollapse","beforecollapsenode","beforedblclick","beforeexpand","beforeexpandnode","beforeinsert","beforeinsert","beforeload","beforeload","beforemove","beforemovenode","beforenodedrop","beforeremove","beforeremove","beforeselect","checkchange","click","click","collapse","collapsenode","containerclick","containerclick","containercontextmenu","containercontextmenu","containerdblclick","contextmenu","contextmenu","dblclick","dblclick","disabledchange","dragdrop","enddrag","expand","expandnode","insert","insert","load","load","mouseenter","mouseleave","move","movenode","nodedragover","nodedrop","remove","remove","selectionchange","startdrag","textchange"],"config":["animate","animate","bubbleEvents","containerScroll","ddAppendOnly","ddGroup","ddScroll","displayField","dragConfig","dropConfig","enableDD","enableDrag","enableDrop","hlColor","hlDrop","lines","lines","loader","pathSeparator","requestMethod","root","root","rootVisible","rootVisible","selModel","singleExpand","singleExpand","trackMouseOver","useArrows","useArrows"]},"Ext.tree.TreeView":{"method":["collapse","expand","getTreeStore","toggle"],"property":[],"event":[],"config":["animate","rootVisible"]},"Ext.tree.TreeViewDDPlugin":{"method":[],"property":[],"event":["beforedrop","drop"],"config":["allowContainerDrop","allowParentInsert","appendOnly","ddGroup","dragGroup","dropGroup","enableDrag","enableDrop","expandDelay"]},"Ext.util.Animate":{"method":["animate","hasActiveFx","sequenceFx","stopFx","syncFx"],"property":[],"event":[],"config":[]},"Ext.util.ClickRepeater":{"method":["disable","enable","setDisabled"],"property":[],"event":["click","mousedown","mouseup"],"config":["accelerate","delay","el","interval","pressedCls","preventDefault","stopDefault"]},"Ext.util.Cookies":{"method":["clear","get","set"],"property":[],"event":[],"config":[]},"Ext.util.CSS":{"method":["createStyleSheet","getRule","getRules","refreshCache","removeStyleSheet","swapStyleSheet","updateRule"],"property":[],"event":[],"config":[]},"Ext.util.DelayedTask":{"method":["cancel","delay"],"property":[],"event":[],"config":[]},"Ext.util.Dispatcher":{"method":["createRedirect","dispatch","redirect"],"property":[],"event":["before-dispatch","dispatch"],"config":[]},"Ext.util.Floating":{"method":["alignTo","center","constructor","doConstrain","setActive","toBack","toFront"],"property":[],"event":[],"config":["focusOnToFront","shadow"]},"Ext.util.Format":{"method":["currency","date","dateRenderer","defaultValue","escapeRegex","fileSize","lowercase","math","nl2br","number","numberRenderer","parseBox","plural","round","stripScripts","stripTags","substr","trim","undef","uppercase","usMoney"],"property":["currencyAtEnd","currencyPrecision","currencySign","decimalSeparator","thousandSeparator"],"event":[],"config":[]},"Ext.util.Grouper":{"method":["getGroupString"],"property":[],"event":[],"config":[]},"Ext.util.HashMap":{"method":["add","clear","clone","contains","containsKey","each","get","getCount","getKeys","getValues","remove","removeByKey","replace"],"property":[],"event":["add","clear","remove","replace"],"config":["keyFn"]},"Ext.util.History":{"method":["add","back","forward","getToken","init"],"property":["fieldId","iframeId"],"event":["change","ready"],"config":[]},"Ext.util.Inflector":{"method":["classify","clearPlurals","clearSingulars","isUncountable","ordinalize","plural","pluralize","singular","singularize"],"property":[],"event":[],"config":[]},"Ext.util.KeyMap":{"method":["addBinding","destroy","disable","enable","isEnabled","on","setDisabled"],"property":[],"event":[],"config":[]},"Ext.util.KeyNav":{"method":["destroy","disable","enable","getKeyEvent","setDisabled"],"property":[],"event":[],"config":["defaultEventAction","disabled","forceKeyDown"]},"Ext.util.MixedCollection":{"method":["reorder","sortBy","sortByKey"],"property":[],"event":[],"config":[]},"Ext.util.Observable":{"method":["Ext.util.Observable.capture","Ext.util.Observable.observe","Ext.util.Observable.releaseCapture","addEvents","addListener","addManagedListener","clearListeners","clearManagedListeners","enableBubble","fireEvent","hasListener","on","relayEvents","removeListener","removeManagedListener","resumeEvents","suspendEvents","un"],"property":[],"event":[],"config":["listeners"]},"Ext.util.Point":{"method":["Ext.util.Point.fromEvent","equals","isWithin","roundedEquals","toString","translate"],"property":[],"event":[],"config":[]},"Ext.util.Region":{"method":["Ext.util.Region.from","Ext.util.Region.getRegion","adjust","constrainTo","constructor","contains","copy","copyFrom","equals","getOutOfBoundOffset","getOutOfBoundOffsetX","getOutOfBoundOffsetY","intersect","isOutOfBound","isOutOfBoundX","isOutOfBoundY","round","toString","translateBy","union"],"property":[],"event":[],"config":[]},"Ext.util.Route":{"method":["recognize","recognizes","urlFor"],"property":["var"],"event":[],"config":["url"]},"Ext.util.Router":{"method":["clear","connect","draw","generate","name","recognize","resources"],"property":[],"event":[],"config":[]},"Ext.util.Sortable":{"method":["TODO","initSortable","sort"],"property":["defaultSortDirection","isSortable","sortRoot","sorters"],"event":[],"config":[]},"Ext.util.Stateful":{"method":["beginEdit","cancelEdit","commit","copy","endEdit","get","getChanges","isModified","reject","set","setDirty"],"property":["dirty","editing","modified"],"event":[],"config":["persistanceProperty"]},"Ext.util.TaskRunner":{"method":["start","stop","stopAll"],"property":[],"event":[],"config":[]},"Ext.util.TextMetrics":{"method":["bind","constructor","destroy","getHeight","getSize","getWidth","measure","setFixedWidth"],"property":[],"event":[],"config":[]},"Ext.ux.form.FileUploadField":{"method":[],"property":["button","fileInputEl"],"event":["change"],"config":["buttonCfg","buttonMargin","buttonOnly","buttonText","fieldBodyCls"]},"Ext.Version":{"method":["compare","constructor","deprecate","eq","equals","getBuild","getComponentValue","getMajor","getMinor","getPatch","getRelease","getSimplified","getVersion","gt","isGreaterThan","isSmallerThan","lt","match","setVersion","toArray"],"property":[],"event":[],"config":[]},"Ext.view.BoundList":{"method":[],"property":["pagingToolbar"],"event":[],"config":["pageSize"]},"Ext.view.BoundListKeyNav":{"method":["highlightAt","selectHighlighted"],"property":[],"event":[],"config":["boundList","selectOnTab"]},"Ext.view.TableView":{"method":["addRowCls","getFeature","getRowClass","getTableChunker","refresh","removeRowCls","saveScrollState"],"property":[],"event":["rowfocus"],"config":["An"]},"Ext.window.MessageBoxWindow":{"method":["alert","anchorTo","clearAnchor","confirm","progress","prompt","setIcon","show","updateProgress","wait"],"property":["CANCEL","ERROR","INFO","NO","OK","OKCANCEL","QUESTION","WARNING","YES","YESNO","YESNOCANCEL","buttonText","defaultTextHeight","minProgressWidth","minPromptWidth"],"event":[],"config":[]},"Ext.window.Window":{"method":["getFocusEl","hide","maximize","minimize","restore","toggleMaximize"],"property":["dd"],"event":["activate","deactivate","maximize","minimize","resize","restore"],"config":["animateTarget","baseCls","closable","collapsed","constrain","constrainHeader","defaultFocus","draggable","expandOnShow","hidden","maximizable","maximized","minimizable","modal","onEsc","plain","resizable","x","y"]},"Ext.WindowMgr":{"method":[],"property":[],"event":[],"config":[]},"Ext.XTemplate":{"method":["Ext.XTemplate.from","apply","applyTemplate","compile"],"property":[],"event":[],"config":["codeRe"]},"Ext.ZIndexManager":{"method":["bringToFront","each","get","getActive","getBy","hideAll","register","sendToBack","unregister"],"property":[],"event":[],"config":[]}};
    //     Ext.Ajax.request({
    //  url: req.baseDocURL + '/class_search.json',
    //  success: function(response) {
    //      classSearch = JSON.parse(response.responseText);
    //  }
    // });

    var searchExt = function(term) {
        var trm = filterClasses(term);
        searchStore.loadData({classes: trm}, false);
    }

	var filterClasses = function(term) {
	    var result = [];
	    var termExpr = new RegExp(term, "i");
	    var members = ['method', 'config', 'property', 'event'];

	    for (var cls in classSearch) {
	        if (cls.match(termExpr)) {
                result.push({cls: cls, memberType: 'cls', member: cls});
                if (result.length >= 10) return result;
	        }
	    }
	    for (var cls in classSearch) {
	        for (var m=0; m< 4; m++) {
	            var member = members[m];
    	        for (var i=0; i< classSearch[cls][member].length; i++) {
    	            var curMember = classSearch[cls][member][i];
    	            if (curMember && curMember.match(termExpr)) {
                        result.push({ cls: cls, memberType: member, member: curMember });
                        if (result.length >= 10) return result;
    	            }
    	        }
	        }
	    }

	    return result;
	}
    
})
